* Org
** Basics
*** User email address
    #+begin_src emacs-lisp
      (setq user-mail-address "lsg6140@gmail.com")
    #+end_src
*** Make Text mode the default mode for new buffers
    #+begin_src emacs-lisp
      (setq-default major-mode 'text-mode)
    #+end_src
*** Agenda files 
    #+begin_src emacs-lisp
      (setq org-agenda-files (list "~/dev/org/1.org"
                                   "~/dev/ode/ode.org"))
    #+end_src
** Babel
  Machine specific path such as ~(setq org-ditaa-jar-path "/usr/share/ditaa/ditaa.jar")~ is place at ~$HOME/spacemacs/.emacs.d/init.el~.
   #+begin_src emacs-lisp 
     (setq org-src-fontify-natively t)
     (setq org-confirm-babel-evaluate nil)

     (org-babel-do-load-languages
      'org-babel-load-languages
      '((C . t)
        (shell . t)
        (emacs-lisp . t)
        (latex . t)
        (python . t)
        (R . t)
        (octave . t)
        (ditaa . t)
        (ruby . t)
        (haskell . t)
        (java . t)
        )
      )
   #+end_src

   #+RESULTS:

*** Easy templates
   Org 9.2 comes with a new template expansion mechanism, combining ~org-insert-structure-template~ bound to ~C-c C-comma~. Previous patterns such as ~<s TAB~ can be activated by requiring Org Tempo library ([[https://orgmode.org/Changes.html#org1b5e967][Imcompatible changes]]).

   #+begin_src emacs-lisp
     (require 'org-tempo)
   #+end_src

   More templates can added by customizing the variable ~org-structure-template-alist~. To enable complex templates, ~tempo-define-template~ function or Yasnippet are useful.
   ! ~org-structure-template-alist~ only works for blocks. [[https://emacs.stackexchange.com/questions/46795/is-it-possible-to-add-templates-other-than-begin-end-to-org-structure-temp][check here]].
 
   ~<n~ is added to insert name ~#+name:~ before code block.

   #+begin_src emacs-lisp
   (tempo-define-template "code-block-with-name"
                          '(> "#+name: " p
                            n> "#+begin_src"
                            n> "#+end_src")
                          "<n"
                          "Insert 'name' line for code block")
   #+end_src

   ~<P~ is added to insert property drawer.
   #+begin_src emacs-lisp
     (tempo-define-template "property-drawer"
                            '(> ":PROPERTIES:"
                                n> ":" p
                                n> ":END:")
                            "<P")
   #+end_src

** Line visual
   #+begin_src emacs-lisp
     (add-hook 'org-mode-hook 'visual-line-mode)
     (add-hook 'text-mode-hook 'visual-line-mode)
   #+end_src

   #+RESULTS:

   
   
** Key bindings
*** Open myinit.org file
    #+begin_src emacs-lisp
      (spacemacs/declare-prefix "o" "own-menu")
      (spacemacs/set-leader-keys "oi" (lambda () (interactive) (find-file "~/.emacs.d/myinit.org")))
    #+end_src
 
*** Bind F4 for tangle
    #+begin_src emacs-lisp
     (define-key org-mode-map (kbd "<f4>")'org-babel-tangle)
    #+end_src

   #+RESULTS:
   : org-babel-tangle
